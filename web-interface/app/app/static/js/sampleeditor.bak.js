const SAMPLE_EDITOR=document.querySelector("#sample-editor").tBodies[0],SAMPLE_NAME_ATTR={general_name:"name",label:"Sample name",description:"Unique name to differentiate between registered samples.",pattern:"\\w+",type_:"sample_name"},SHORT_DESCRIPTION_ATTR={general_name:"short_description",label:"Short description",description:"A short description to more easily identify the sample.",type_:"text"};async function fetchTemplate(){const e=await fetch("/templates/json/"+TEMPLATE_ID);return e.json()}function createAttributeField(e,t="",a=!1){let l;switch(l=document.createElement("input"),e.type_){case"text":(l=document.createElement("input")).type="text",e.pattern&&(l.pattern=e.pattern),e.default&&(l.value=e.default);break;case"select":l=createSelectMenu(parseOptions(e.options)),e.default&&(l.value=e.default);break;case"date":(l=document.createElement("input")).type="date",e.default&&(l.value=e.default);break;case"template":(l=document.createElement("input")).type="text",l.placeholder=e.template,l.setAttribute("template-string",e.template),l.classList.add("template");break;case"sample_name":a?(l=document.createElement("p")).innerHTML="Must be unique.":((l=document.createElement("input")).type="text",l.pattern=e.pattern)}return a?"sample_name"!=e.type_&&l.addEventListener("change",function(){changeAll(this)},!1):"template"!=e.type_&&l.addEventListener("change",function(){updateTemplateFields()},!1),l.classList.add(e.general_name),t&&(l.name=t+"+"+e.general_name),l}function changeAll(t){t.parentElement.parentElement.querySelectorAll(".sample.attr").forEach(e=>{e.querySelector(".attr.field").value=t.value}),updateTemplateFields()}function parseTemplateString(e){let t=[],a=!0,l=!1;return[...e].forEach(e=>{"["==e?(t.push({type:"var",value:"",format:""}),a=!1):"]"==e?a=!0:(a&&t.push({type:"const",value:"",format:""}),l?(t[t.length-1].format=e,l=!1):"%"==e?l=!0:(t[t.length-1].value+=e,a=!1))}),t}function constructStringFromTemplate(e){let a="";return e.forEach(t=>{if("const"==t.type)a+=t.value;else if(t.fieldValue)if(t.format)if(DATE_FORMATS.includes(t.format)){let e=new Date(t.fieldValue);"Y"==t.format&&(a+=e.getFullYear()),"m"==t.format&&(a+=e.getMonth()),"d"==t.format&&(a+=e.getDate())}else STRING_FORMATS.includes(t.format)&&("U"==t.format&&(a+=t.fieldValue.toUpperCase()),"l"==t.format&&(a+=t.fieldValue.toLowerCase()),"C"==t.format&&(a+=t.fieldValue.slice(0,1).toUpperCase()+t.field.value.split(1).toLowerCase()));else a+=t.fieldValue;else a+="["+t.value,t.format&&(a+="%"+t.format),a+="]"}),a}function updateTemplateFields(e){let t,a;Array.from(document.querySelectorAll(".field.attr.template")).forEach(e=>{a=e.name.split("+").slice(0,-1).join("+"),(t=parseTemplateString(e.getAttribute("template-string"))).filter(e=>"const"!=e.type).forEach(e=>{e.fieldValue=document.querySelector(`[name='${a}+${e.value}']`).value}),e.value=constructStringFromTemplate(t)})}function createNewRow(e){const t=document.createElement("tr"),a=(t.classList.add("row",e.general_name),document.createElement("th")),l=(a.innerHTML=e.label,a.classList.add("attrname","col"),t.appendChild(a),document.createElement("td")),n=(l.appendChild(createAttributeField(e,sampleName="",isEditAll=!0)),l.classList.add("editall","col"),t.appendChild(l),document.createElement("td"));return n.innerHTML=e.description,n.classList.add("description","col"),t.appendChild(n),t}function insertAttributeCell(e,t,a=!1){const l=SAMPLE_EDITOR.querySelector(".row."+e.general_name),n=createAttributeField(e,t),r=(n.classList.add("field","attr",e.general_name),l.insertCell(l.cells.length-1));r.classList.add("attr","sample",e.general_name),a&&r.classList.add("new"),r.appendChild(n)}async function addNewSample(t=!0){const e=await fetchTemplate();let a="";var l;t&&(l=SAMPLE_EDITOR.rows[0].querySelectorAll(".attr.sample.new").length+1,a="sample+new+"+l),insertAttributeCell(SAMPLE_NAME_ATTR,a,t),insertAttributeCell(SHORT_DESCRIPTION_ATTR,a,t),e.attributes.forEach(e=>{insertAttributeCell(e,a,t)});const n=document.querySelector("#samples-header-cell");n.style.display||(n.colSpan=parseInt(n.colSpan)+1),n.style.display=""}async function initSampleEditor(){const e=await fetchTemplate();let t=createNewRow(SAMPLE_NAME_ATTR);SAMPLE_EDITOR.appendChild(t),t=createNewRow(SHORT_DESCRIPTION_ATTR),SAMPLE_EDITOR.appendChild(t),e.attributes.forEach(e=>{t=createNewRow(e),SAMPLE_EDITOR.appendChild(t)})}DATE_FORMATS=["Y","m","d"],STRING_FORMATS=["U","l","C"],initSampleEditor();