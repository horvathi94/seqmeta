const FTYPES=["text","select","date","template","file"];class CustomInput extends HTMLElement{constructor(){super()}connectedCallback(){this._type="text",this._fname="custom-input",this._value="",this._input=this.createTextField()}createTextField(){const a=document.createElement("input");return a.name=this.fname,a.type="text",a.value=this.value,a}createDateField(){const a=document.createElement("input");return intpu.name=this.fname,a.type="date",a.value=this.value,a}createTemplateField(){const a=document.createElement("input");return a.type="text",a.name=this.fname,a.value=this.value,a}createSelectField(){const a=document.createElement("select");return a.name=this.fname,a}refresh(){switch(0<this.children.length&&this.children[0].remove(),this.type){case"text":this._input=this.createTextField();break;case"date":this._input=this.createDateField();break;case"select":this._input=this.createSelectField();break;case"template":this._input=this.createTemplateField();break;default:return;}this.appendChild(this._input)}get fname(){return this._fname}get type(){return this._type}get value(){return this._value}set fname(a){this._fname=a,this.refresh()}set type(a){this._type=a,this.refresh()}set value(a){this._value=a,this.refresh()}static create({fname:a=void 0,type:b="text",value:c=""}){const d=document.createElement("custom-input");return d._fname=a,d._type=b,d._value=c,d.refresh(),d}}customElements.define("custom-input",CustomInput);