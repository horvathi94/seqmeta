let sourcePad;function handleDragStart(){sourcePad=this.parentElement,this.classList.add("moving")}function handleDragEnd(){this.classList.remove("moving"),TEMPLATE_EDITOR.querySelectorAll(".row").forEach(e=>{e.classList.remove("over")})}function handleDragEnter(){this.classList.add("over")}function handleDragEnterPad(){this.querySelector("div.row")}function handleDragLeave(){this.classList.remove("over")}function handleDragOver(e){return e.preventDefault(),!1}function cloneRow(e){const t=createBlankRow();var n=t.querySelector("div.row");const r=Object.create(ATTRIBUTE),a=new AttributeRow(e.querySelector("div.row")),o=(r.general_name=a.getName(),r.label=a.getLabel(),r.type_=a.getType(),r.description=a.getDescription(),r.ena_requirement=a.getEnaRequirementLevel(),r.ena_name=a.getEnaName(),r.ena_units=a.getEnaUnits(),r.gisaid_requirement=a.getGisaidRequirementLevel(),r.gisaid_name=a.getGisaidName(),r.gisaid_header=a.getGisaidHeader(),r.pattern=a.getPattern(),r.options=a.getOptions(),r.default=a.getDefault(),new AttributeRow(n));return o.setFromAttribute(r),t}function handleDrop(e){e.stopPropagation();const t=sourcePad.querySelector("div.row");if(t!==this){const n=cloneRow(this.parentElement),r=new AttributeRow(n.querySelector("div.row")),a=new AttributeRow(t);e=a.getIndex();a.setIndex(r.getIndex()),r.setIndex(e),t.classList.remove("moving"),console.log(sourcePad),TEMPLATE_EDITOR.replaceChild(sourcePad,this.parentElement),TEMPLATE_EDITOR.replaceChild(n,sourcePad)}}function handleDropPad(e){e.stopPropagation()}