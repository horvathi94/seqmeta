const FIELD_TYPES=["text","select","date","template","file"],REQUIREMENT_LEVELS=["exclude","optional","recommended","mandatory"],FIXED_VALUES=["sample_name","ena_checklist"];let dragSource;const ATTR_EDITOR=TEMPLATE_EDITOR.querySelector("#attr-editor");let EMPTY_ATTRIBUTE;async function fetchEmptyAttribute(){const a=await fetch("/templates/attributes?for=empty"),b=await a.json();EMPTY_ATTRIBUTE=b[0]}fetchEmptyAttribute();class EditorRow extends HTMLElement{constructor(){super(),this.cells={},0==this.children.length?this.initCells():this.readCells(),this.addEventListener("dragstart",this.handleDragStart),this.addEventListener("dragend",this.handleDragEnd),this.addEventListener("dragover",this.handleDragOver),this.addEventListener("dragenter",this.handleDragEnter),this.addEventListener("dragleave",this.handleDragLeave),this.addEventListener("drop",this.handleDrop)}connectedCallback(){Object.values(this.cells).forEach(a=>{this.appendChild(a)}),this.draggable=!0}wrapCell(a,b=[]){const c=EditorCell.create(a,b);return c.classList.add(a),c}readCells(){this.cells.removeCell=this.querySelector("editor-cell.remove"),this.cells.generalNameCell=this.querySelector("editor-cell.general_name"),this.cells.labelCell=this.querySelector("editor-cell.label"),this.cells.typeCell=this.querySelector("editor-cell.type_"),this.cells.enaCell=this.querySelector("editor-cell.ena"),this.cells.gisaidCell=this.querySelector("editor-cell.gisaid"),this.cells.paramsCell=this.querySelector("editor-cell.params"),this.cells.defaultCell=this.querySelector("editor-cell.default"),this.cells.descriptionCell=this.querySelector("editor-cell.description")}initCells(){this.cells.removeCell=this.wrapCell("remove",[this.removeButton]),this.cells.generalNameCell=this.wrapCell("general_name",[this.generalNameField]),this.cells.labelCell=this.wrapCell("label",[this.labelField]),this.cells.typeCell=this.wrapCell("type_",[this.typeField]),this.cells.enaCell=this.wrapCell("ena",this.enaFields),this.cells.gisaidCell=this.wrapCell("gisaid",this.gisaidFields),this.cells.paramsCell=this.wrapCell("params",[this.paramsField]),this.cells.defaultCell=this.wrapCell("default",[this.defaultField]),this.cells.descriptionCell=this.wrapCell("description",[this.descriptionField])}get removeButton(){const a=document.createElement("input");return a.type="button",a.classList.add("rmbutton"),a.value="X",a.onclick=function(){const a=this.closest("editor-row");a.nextSibling.remove(),a.remove()},a}genName(a){return`attr+${this.index}+${a}`}get generalNameField(){const a=document.createElement("input");return a.type="text",a.name=this.genName("general_name"),a}get labelField(){const a=document.createElement("input");return a.type="text",a.name=this.genName("label"),a}get typeField(){const a=createSelectMenu(FIELD_TYPES);return a.name=this.genName("type_"),a.onchange=function(){this.closest("editor-row").type=this.value},a}get paramsField(){let a=document.createElement("input");switch(a.type="text",this.type){case"text":a.name=this.genName("pattern"),a.placeholder="Regex for input.";break;case"select":a=document.createElement("textarea"),a.name=this.genName("options"),a.placeholder="Comma separated list of options.";break;case"template":a.name=this.genName("template"),a.placeholder="Template for input.";break;case"date":case"file":a.name="junk",a.placeholder="N/A",a.disabled=!0;break;default:return void console.log("Failed to create paramters cell.");}return a.onchange=function(){this.closest("editor-row").modifiedParams(this.value)},a}get defaultField(){let a=document.createElement("input");switch(this.type){case"text":a.type="text",a.placeholder="Default value for field.";break;case"select":a=createSelectMenu(this.options);break;case"date":a.type="date";break;case"template":case"file":return a.type="text",a.name="junk",a.placeholder="N/A",a.disabled=!0,a;default:return void console.log("Failed to create default cell.");}return a.name=this.genName("default"),a}createEnaUnitsField(a=[]){let b=document.createElement("input");return b.type="text",b.name=this.genName("ena_units"),b.placeholder="ENA unit.",b.value=a.join(","),b}createRepoNameField(a){const b=document.createElement("input");return b.type="text",b.name=this.genName(`${a}_name`),b.placeholder="Field name",b}createRepoReqField(a){const b=createSelectMenu(REQUIREMENT_LEVELS);return b.name=this.genName(`${a}_requirement`),b.onchange=function(){this.closest("editor-row").modifiedRequirements(this.value)},b}get enaFields(){const a=this.createRepoNameField("ena"),b=this.createRepoReqField("ena"),c=this.createEnaUnitsField();return[a,b,c]}get gisaidFields(){const a=this.createRepoNameField("gisaid"),b=this.createRepoReqField("gisaid"),c=document.createElement("input");return c.type="text",c.name=this.genName("gisaid_header"),c.placeholder="GISAID first header",[a,b,c]}get descriptionField(){const a=document.createElement("textarea");return a.name=this.genName("description"),a.placeholder="Short description of the field.",a}set index(a){this.dataset.index=a,Object.values(this.cells).forEach(b=>{b.index=a})}get index(){return this.dataset.index}get generalName(){return this.cells.generalNameCell.getValue("general_name")}set generalName(a){this.cells.generalNameCell.setValue("general_name",a)}get label(){return this.cells.labelCell.getValue("label")}set label(a){this.cells.labelCell.setValue("label",a)}set type(a){this.cells.typeCell.setValue("type_",a),this.cells.paramsCell.update([this.paramsField]),this.cells.defaultCell.update([this.defaultField])}get type(){return this.cells.typeCell.getValue("type_")}get options(){return"select"==this.type?this.cells.paramsCell.getValue("options").split(","):void 0}set options(a=[]){null===a||"select"!=this.type||(this.cells.paramsCell.setValue("options",a.join(",")),this.cells.defaultCell.update([this.defaultField]))}get pattern(){"text"!=this.type||this.cells.paramsCell.getValue("pattern")}set pattern(a=""){null===a||"text"!=this.type||(this.cells.paramsCell.setValue("pattern",a),this.cells.defaultCell.setPattern("default",a))}get template(){return this.cells.paramsCell.getValue("template")}set template(a){"template"!=this.type||null===a||(this.cells.paramsCell.setValue("template",a),this.verifyTemplate(this.template))}get description(){return this.cells.descriptionCell.getValue("description")}set description(a){this.cells.descriptionCell.setValue("description",a)}get maxRequirement(){const a=[this.enaRequirement,this.gisaidRequirement];let b=REQUIREMENT_LEVELS[0];return REQUIREMENT_LEVELS.forEach(c=>{a.includes(c)&&(b=c)}),b}get enaName(){return this.cells.enaCell.getValue("ena_name")}set enaName(a){this.cells.enaCell.setValue("ena_name",a)}get enaRequirement(){return this.cells.enaCell.getValue("ena_requirement")}set enaRequirement(a){this.cells.enaCell.setValue("ena_requirement",a)}get enaUnits(){return this.cells.enaCell.getValue("ena_units").split(",")}set enaUnits(a){this.cells.enaCell.setValue("ena_units",a)}get gisaidName(){return this.cells.gisaidCell.getValue("gisaid_name")}set gisaidName(a){this.cells.gisaidCell.setValue("gisaid_name",a)}get gisaidRequirement(){return this.cells.gisaidCell.getValue("gisaid_requirement")}set gisaidRequirement(a){this.cells.gisaidCell.setValue("gisaid_requirement",a)}get gisaidHeader(){return this.cells.gisaidCell.getValue("gisaid_header")}set gisaidHeader(a){this.cells.gisaidCell.setValue("gisaid_header",a)}get default(){return this.cells.defaultCell.getValue("default")}set default(a){this.cells.defaultCell.setValue("default",a)}verifyTemplate(a){if(a){const b=parseTemplateString(a);this.cells.paramsCell.toggleInvalid("template",!1),b.filter(a=>"var"==a.type).forEach(a=>{let b=!1;if(TEMPLATE_EDITOR.querySelectorAll("editor-row").forEach(c=>{c.generalName==a.value&&(b=!0),FIXED_VALUES.includes(a.value)&&(b=!0)}),!b)return void this.cells.paramsCell.toggleInvalid("template",!0)})}}modifiedParams(a){switch(this.type){case"text":this.pattern=a;break;case"select":this.options=a.split(",");break;case"template":this.verifyTemplate(a);break;case"date":case"file":break;default:}}modifiedRequirements(){switch(this.maxRequirement){case"exclude":case"optional":case"recommended":this.cells.removeCell.querySelector(".rmbutton").disabled=!1;break;case"mandatory":this.cells.removeCell.querySelector(".rmbutton").disabled=!0;break;default:}}setFromAttribute(a){this.generalName=a.general_name,this.label=a.label,this.type=a.type_,this.enaName=a.ena_name,this.enaRequirement=a.ena_requirement,this.enaUnits=a.ena_units,this.gisaidName=a.gisaid_name,this.gisaidRequirement=a.gisaid_requirement,this.gisaidHeader=a.gisaid_header,this.pattern=a.pattern,this.options=a.options,this.template=a.template,this.default=a.default,this.description=a.description,this.modifiedRequirements()}getAttr(){const a=Object.create(EMPTY_ATTRIBUTE);return a.general_name=this.generalName,a.label=this.label,a.type_=this.type,a.description=this.description,a.ena_requirement=this.enaRequirement,a.ena_name=this.enaName,a.ena_units=this.enaUnits,a.gisaid_requirement=this.gisaidRequirement,console.log("GISAID name:",this.gisaidName),a.gisaid_name=this.gisaidName,a.gisaid_header=this.gisaidHeader,a.pattern=this.pattern,a.options=this.options,a.default=this.default,a}handleDragStart(a){dragSource=this,this.classList.add("moving"),a.dataTransfer.effectAllowed="move"}handleDragEnd(){this.classList.remove("moving"),dragSource=null}handleDragEnter(){this.classList.add("over")}handleDragLeave(){this.classList.remove("over")}handleDragOver(a){return a.preventDefault(),!1}clearDragClasses(){this.classList.remove("moving"),this.classList.remove("over")}handleDrop(a){if(a.stopPropagation(),this===dragSource)return!1;const b=document.createElement("editor-row");return b.setFromAttribute(dragSource.getAttr()),b.index=this.index,this.index=dragSource.index,ATTR_EDITOR.replaceChild(b,this),ATTR_EDITOR.replaceChild(this,dragSource),this.clearDragClasses(),!1}}customElements.define("editor-row",EditorRow);