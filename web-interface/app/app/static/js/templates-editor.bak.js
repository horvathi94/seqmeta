const TEMPLATE_EDITOR=document.querySelector("#template-editor");class CustomElement{static elementType="div";static classes=[];static isDraggable=!1;constructor(e){this.elem=e,0==this.elem.children.length&&this.populate()}populate(){}static create(){const t=document.createElement(this.elementType);return this.classes.forEach(e=>{t.classList.add(e)}),t.draggable=this.isDraggable,new this(t)}}class Cell extends CustomElement{static classes=["cell"];attrName="motherfucker";index=0;constructor(e,t=""){super(e),this.attrName=t}listFields(){ArrayFrom(this.elem.querySelectorAll(""))}name(){return`attr+${this.index}+`+this.attrName}setIndex(e){this.index=e,this.elem.dataset.index=this.index,this.listFields().forEach(e=>{e.name=this.name()})}getIndex(){return this.elem.datase.index}listFields(){return Array.from(this.elem.querySelectorAll(".inpfield"))}createFields(){return[]}populate(){Array.from(this.createFields()).forEach(e=>{e.classList.add("inpfield"),this.elem.appendChild(e)})}}class GeneralNameCell extends Cell{attrName="general_name";createFields(){return console.log(this.index,this.attrName),[new TextField(this.name()).input]}}class Row extends CustomElement{static classes=["row","attr"];static isDraggable=!0;listCells(){return Array.from(this.elem.querySelectorAll(".cell")).map(e=>new Cell(e))}setIndex(t){this.elem.dataset.index=t,this.listCells().forEach(e=>{e.setIndex(t)})}getIndex(e){return this.elem.datase.index}populate(){var e=GeneralNameCell.create();this.elem.appendChild(e.elem)}}class TemplateEditor{constructor(e){this.editor=e}countRows(){return this.editor.querySelectorAll(".rowpad.attr").length}createBlankRow(e=0){0==e&&(e=this.countRows()+1);const t=Row.create();return t.setIndex(e),t.elem}createBlankRowPad(){const e=document.createElement("div");e.classList.add("rowpad","attr");var t=this.createBlankRow();return e.appendChild(t),e}appendBlankRow(){this.editor.appendChild(this.createBlankRowPad())}}const editor=new TemplateEditor(TEMPLATE_EDITOR);editor.appendBlankRow(),editor.appendBlankRow();