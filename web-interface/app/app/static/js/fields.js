function createSelectMenu(a){const b=document.createElement("select");return a.forEach(a=>{option=document.createElement("option"),option.innerHTML=a,option.value=a,b.add(option)}),b}function createInputField(a,b="",c=[],d=[]){let e;return"select"===a?e=createSelectMenu(c):"textarea"===a?e=document.createElement("textarea"):(e=document.createElement("input"),e.setAttribute("type",a)),d&&e.classList.add(...d),b&&(e.name=b),e}function parseOptions(a){return a?a.split(","):[]}class Field{name;type_;constructor(a,b){this.name=a,this.type_=b}declare(){const a=document.createElement("input");return a.type=this.type_,a}create(){const a=this.declare();return a.name=this.name,a}addClasses(a=[]){this.input.classList.add(...a)}setValue(a){a&&null!==a&&(this.input.value=a)}}class HiddenField extends Field{constructor(a){super(a,"hidden"),this.input=this.create()}}class FileField extends Field{constructor(a){super(a,"file"),this.input=this.create(),this.input.accept=".fa,.fasta,fastq.gz"}setValue(a){}}class TextField extends Field{constructor(a){super(a,"text"),this.input=this.create()}setPattern(a){null!==a&&a&&(this.input.pattern=a)}}class DateField extends Field{constructor(a){super(a,"date"),this.input=this.create()}}class TextAreaField extends Field{constructor(a){super(a,"textarea"),this.input=this.create()}declare(){const a=document.createElement("textarea");return a}}class SelectField extends Field{options=[];constructor(a,b){super(a,"select"),this.options=b,this.input=this.create()}declare(){const a=createSelectMenu(this.options);return a}}