class SampleEditor{constructor(){this.editor=document.querySelector("#sample-editor"),this.head=this.editor.tHead,this.table=this.editor.tBodies[0],this.template=null}get fields(){return this.template.fields.concat(this.template.file_fields)}getRow(e){return this.table.querySelector(`tr[data-general-name='${e}']`)}countSamples(){return this.getRow("sample_name").querySelectorAll("td.sample").length}getSampleField(e,t){return this.getRow(t).querySelector(`td.sample[data-sample-index='${e}'] > sample-field`)}getFields(e){return this.getRow(e).querySelectorAll("td.sample > sample-field")}setSampleFieldValue(e,t,a){this.getSampleField(e,t).value=a}getSampleIndex(t){let a=0;return this.getFields("sample_name").forEach(e=>{e.value==t&&(a=e.sampleIndex)}),a}get sampleIndices(){return Array.from(this.getRow("sample_name").querySelectorAll("td.sample")).map(e=>parseInt(e.dataset.sampleIndex))}maxSampleIndex(){return 0==this.sampleIndices.length?0:Math.max(...this.sampleIndices)}onchangeEditAll(e){SAMPLE_EDITOR.updateValues(e.generalName,e.value),this.sampleIndices.forEach(e=>{this.updateSampleTemplates(e)})}async checkAgainstSaved(e,t,a){let l=`/samples/list-attributes/?template_name=${this.template.name}&attribute_name=`+t;e&&(l+="&skip="+e);const s=await fetch(l).then(e=>e.json());return!s.includes(a)}checkEditorUniqueFields(e){const a=this.getFields(e);let l;for(let t=0;t<a.length;t++){l=!0;for(let e=0;e<a.length;e++)if(t!=e&&a[t].value==a[e].value){l=!1;break}l?a[t].isValid():a[t].isInvalid()}}samplesFromFiles(e){Array.from(e.input.files).forEach(e=>{const t=e.name.split(".")[0];var a,e=t.split("_")[0];this.getSampleIndex(e)||(a=this.addSample(),this.fillSample(a,[{general_name:"sample_name",value:e}]))})}async checkUnique(e){await this.checkAgainstSaved(e.sampleName,e.generalName,e.value)?e.isValid():e.isInvalid(),this.checkEditorUniqueFields(e.generalName)}updateValues(e,t){this.getRow(e).querySelectorAll("td.sample").forEach(e=>{e.querySelector("sample-field").value=t})}updateTemplateField(t){const e=parseTemplateString(t.template);e.filter(e=>"const"!=e.type).forEach(e=>{e.fieldValue=this.getSampleField(t.sampleIndex,e.value).value}),t.value=constructStringFromTemplate(e)}updateSampleTemplates(e){this.editor.querySelectorAll(`td.sample[data-sample-index='${e}']`).forEach(e=>{const t=e.querySelector("sample-field");t.isTemplate()&&this.updateTemplateField(t)})}createEditAllCell(e){const t=document.createElement("td");t.classList.add("editall");e=new SampleField({field:e,isEditAll:!0});return t.appendChild(e),t}appendBlankRow(e){const t=this.table.insertRow(),a=(t.dataset.generalName=e.general_name,document.createElement("th"));a.textContent=e.label,t.appendChild(a);var l=this.createEditAllCell(e);t.appendChild(l);const s=document.createElement("td");s.classList.add("description"),s.innerHTML=e.description,t.appendChild(s)}initTable(e){this.template=e,this.fields.forEach(e=>{this.appendBlankRow(e)})}get samplesHeader(){return this.head.querySelector("#samples-header-cell")}stretchHeader(){var e=this.countSamples();this.samplesHeader.colSpan=e,this.samplesHeader.style.display=0==e?"none":""}createRemoveSampleButton(e){const t=document.createElement("input");return t.type="button",t.value="❌",t.dataset.sampleIndex=e,t.onclick=function(){SAMPLE_EDITOR.removeSample(parseInt(this.dataset.sampleIndex))},t}removeSample(t){Array.from(this.table.rows).forEach(e=>{e.querySelector(`td.sample[data-sample-index='${t}']`).remove()}),this.stretchHeader()}appendSampleCell({field:e,sampleIndex:t=0,value:a=null}){const l=document.createElement("td"),s=(l.classList.add("sample"),l.dataset.sampleIndex=t,new SampleField({field:e,sampleIndex:t})),n=(null!==a&&(s.value=a),l.appendChild(s),"sample_name"==e.general_name&&l.appendChild(this.createRemoveSampleButton(t)),this.getRow(e.general_name));n.insertBefore(l,n.querySelector("td.description"))}fillSample(a,l){this.fields.forEach(t=>{var e=l.find(e=>e.general_name==t.general_name);e&&this.setSampleFieldValue(a,t.general_name,e.value)})}addSample(e=null){const t=this.maxSampleIndex()+1;return this.fields.forEach(e=>{this.appendSampleCell({field:e,sampleIndex:t})}),this.stretchHeader(),null!==e&&(console.log("Adding sample: ",e),this.fillSample(t,e.attributes)),t}}const SAMPLE_EDITOR=new SampleEditor,templateName=document.querySelector("#template-name").value,sampleNames=(fetch(`/templates/json?name=${templateName}&use=sample_editor`).then(e=>e.json()).then(e=>SAMPLE_EDITOR.initTable(e)),document.querySelector("#sample-names").value.split(","));sampleNames.forEach(e=>{e&&fetch(`/samples/json?name=${e}&template_name=`+templateName).then(e=>e.json()).then(e=>SAMPLE_EDITOR.addSample(e))});